
80      1
8080    2
8031    3
8032    4
8034    5

service restart 1

8031 8032 8034


vi tomcat_mgmt.sh
i

#/bin/bash


printf "Please choose Command:\nstart\nstop\nrestart\nstatus\nChoose:"
read cmd
echo "You Choose $cmd"

printf "Please choose Object:\n80      1\n8080    2\n8081    3\n8082    4\n8083    5\nall     6\nChoose:"
read num_input
if [ ${num_input} == '6' ];then
    port_input=(80 8080)
elif [ ${num_input} == '1' ];then
    port_input=(80)
elif [ ${num_input} == '2' ];then
    port_input=(8080)
fi



get_pid()
{
    port_num=$1
    pid=$(ps -ef | grep -v 'grep' | grep "tomcat${port_num}/" | awk '{print $2}')
}


start()
{
    port=$1
    get_pid ${port}
    if [[ "${pid}X" != "X" ]];then
        echo "tomcat${port} is already running"
    else
        /usr/local/tomcat${port}/bin/catalina.sh start
        echo "tomcat${port} is starting"
    fi
}

stop()
{
    port=$1
    get_pid ${port}
    if [[ "${pid}X" == "X" ]];then
        echo "tomcat${port} is not running"
    else
        kill -9 ${pid}
        echo "tomcat${port} is stopped"
    fi
}

restart()
{
    port=$1
    stop ${port}
    start ${port}
}

status()
{
    port=$1
    get_pid ${port}
    if [[ "${pid}X" != "X" ]];then
        echo "tomcat${port} is running"
    else
        echo "tomcat${port} is not running"
    fi
}


for i in ${port_input[@]}
do
    case $cmd in
        start)
            start $i
            ;;
        stop)
            stop $i
            ;;
        restart)
            restart $i
            ;;
        status)
            status $i
            ;;
    esac
done





















#!/bin/bash
# chkconfig: 8031 8032 8080 80 8034
#tomcat: start/stop/restart/status tomcat
#date 2017-5-16
#author : Zptomcat
#version:  v1.0 
  
  
# Source function library.
. /etc/rc.d/init.d/functions
  
#match these values to your environment
####################################################################################
export JAVA_HOME="/usr/java7"
export CATALINA_HOME="/opt/tomcat-8031-amzcms/bin"
export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/jre/lib/rt.jar
export PATH=$PATH:$JAVA_HOME/bin
export JAVA_OPTS="-server -Xms512m -Xmx512m"
####################################################################################
getPID() {
PID=$(ps -ef | grep -v 'grep' | grep "${CATALINA_HOME}/conf/logging.properties" | awk '{print $2}')
}

start() {
        getPID
        if [[ "${PID}X" != "X" ]]; then
            echo "tomcat is already running"
        else
            echo "tomcat is starting"
            ${CATALINA_HOME}/bin/catalina.sh start
            tail -f ${CATALINA_HOME}/logs/catalina.out
        fi
}

stop() {
        getPID
        if [[ "${PID}X" == "X" ]]; then
            echo "tomcat is not running"
        else
            kill -9 $PID
            echo "tomcat is stop done"
        fi
}

restart() {
        getPID
        if [[ "${PID}X" == "X" ]]; then
            echo "tomcat is not running,and will be start"
            ${CATALINA_HOME}/bin/catalina.sh start
            echo "tomcat is starting"
        else
            kill -9 $PID
            echo "tomcat is stop"
            ${CATALINA_HOME}/bin/catalina.sh start
            echo "tomcat is starting"
            tailf ${CATALINA_HOME}/logs/catalina.out
        fi
}

status() {
        getPID
        if [[ "${PID}X" == "X" ]]; then
            echo "tomcat is not running!"
        else
            echo "tomcat is running!"
        fi
}

case $1 in
        start   )
                start
                ;;
        stop    )
                stop
                ;;
        restart )
                restart
                ;;
        status  )
                status
                ;;
        *       )
                echo $"Usage: $0 {start|stop|restart|status}"
                exit 2
                ;;
esac
